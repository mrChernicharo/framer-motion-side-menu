{"ast":null,"code":"import _toConsumableArray from \"/Users/felipechernicharo/Desktop/Dev/testes/framer-motion-side-menu-forked/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/felipechernicharo/Desktop/Dev/testes/framer-motion-side-menu-forked/components/ContentPlaceholder.tsx\",\n    _this = this;\n\nimport * as React from \"react\";\nimport { motion } from \"framer-motion\";\nimport { mix } from \"@popmotion/popcorn\";\n\nvar randomInt = function randomInt(min, max) {\n  return Math.round(mix(min, max, Math.random()));\n};\n\nvar generateParagraphLength = function generateParagraphLength() {\n  return randomInt(5, 20);\n};\n\nvar generateWordLength = function generateWordLength() {\n  return randomInt(20, 100);\n}; // Randomly generate some paragraphs of word lengths\n\n\nvar paragraphs = _toConsumableArray(Array(3)).map(function () {\n  return _toConsumableArray(Array(generateParagraphLength())).map(generateWordLength);\n});\n\nexport var Word = function Word(_ref) {\n  var width = _ref.width;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"word\",\n    style: {\n      width: width\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 36\n  }, _this);\n};\n_c = Word;\n\nvar Paragraph = function Paragraph(_ref2) {\n  var words = _ref2.words;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"paragraph\",\n    children: words.map(function (width) {\n      return /*#__PURE__*/_jsxDEV(Word, {\n        width: width\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 3\n  }, _this);\n};\n\n_c2 = Paragraph;\nexport var ContentPlaceholder = function ContentPlaceholder() {\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    variants: {\n      collapsed: {\n        scale: 0.8\n      },\n      open: {\n        scale: 1\n      }\n    },\n    transition: {\n      duration: 0.8\n    },\n    className: \"content-placeholder\",\n    children: paragraphs.map(function (words) {\n      return /*#__PURE__*/_jsxDEV(Paragraph, {\n        words: words\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 3\n  }, _this);\n};\n_c3 = ContentPlaceholder;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Word\");\n$RefreshReg$(_c2, \"Paragraph\");\n$RefreshReg$(_c3, \"ContentPlaceholder\");","map":{"version":3,"sources":["/Users/felipechernicharo/Desktop/Dev/testes/framer-motion-side-menu-forked/components/ContentPlaceholder.tsx"],"names":["React","motion","mix","randomInt","min","max","Math","round","random","generateParagraphLength","generateWordLength","paragraphs","Array","map","Word","width","Paragraph","words","ContentPlaceholder","collapsed","scale","open","duration"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,GAAT,QAAoB,oBAApB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,GAAD,EAAMC,GAAN;AAAA,SAAcC,IAAI,CAACC,KAAL,CAAWL,GAAG,CAACE,GAAD,EAAMC,GAAN,EAAWC,IAAI,CAACE,MAAL,EAAX,CAAd,CAAd;AAAA,CAAlB;;AACA,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B;AAAA,SAAMN,SAAS,CAAC,CAAD,EAAI,EAAJ,CAAf;AAAA,CAAhC;;AACA,IAAMO,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA,SAAMP,SAAS,CAAC,EAAD,EAAK,GAAL,CAAf;AAAA,CAA3B,C,CAEA;;;AACA,IAAMQ,UAAU,GAAG,mBAAIC,KAAK,CAAC,CAAD,CAAT,EAAcC,GAAd,CAAkB,YAAM;AACzC,SAAO,mBAAID,KAAK,CAACH,uBAAuB,EAAxB,CAAT,EAAsCI,GAAtC,CAA0CH,kBAA1C,CAAP;AACD,CAFkB,CAAnB;;AAIA,OAAO,IAAMI,IAAI,GAAG,SAAPA,IAAO;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,sBAAe;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAK,EAALA;AAAF;AAA7B;AAAA;AAAA;AAAA;AAAA,WAAf;AAAA,CAAb;KAAMD,I;;AAEb,IAAME,SAAS,GAAG,SAAZA,SAAY;AAAA,MAAGC,KAAH,SAAGA,KAAH;AAAA,sBAChB;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cACGA,KAAK,CAACJ,GAAN,CAAU,UAACE,KAAD;AAAA,0BACT,QAAC,IAAD;AAAM,QAAA,KAAK,EAAEA;AAAb;AAAA;AAAA;AAAA;AAAA,eADS;AAAA,KAAV;AADH;AAAA;AAAA;AAAA;AAAA,WADgB;AAAA,CAAlB;;MAAMC,S;AAQN,OAAO,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA,sBAChC,QAAC,MAAD,CAAQ,GAAR;AACE,IAAA,QAAQ,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAb;AAA6BC,MAAAA,IAAI,EAAE;AAAED,QAAAA,KAAK,EAAE;AAAT;AAAnC,KADZ;AAEE,IAAA,UAAU,EAAE;AAAEE,MAAAA,QAAQ,EAAE;AAAZ,KAFd;AAGE,IAAA,SAAS,EAAC,qBAHZ;AAAA,cAKGX,UAAU,CAACE,GAAX,CAAe,UAACI,KAAD;AAAA,0BACd,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,eADc;AAAA,KAAf;AALH;AAAA;AAAA;AAAA;AAAA,WADgC;AAAA,CAA3B;MAAMC,kB","sourcesContent":["import * as React from \"react\";\nimport { motion } from \"framer-motion\";\nimport { mix } from \"@popmotion/popcorn\";\n\nconst randomInt = (min, max) => Math.round(mix(min, max, Math.random()));\nconst generateParagraphLength = () => randomInt(5, 20);\nconst generateWordLength = () => randomInt(20, 100);\n\n// Randomly generate some paragraphs of word lengths\nconst paragraphs = [...Array(3)].map(() => {\n  return [...Array(generateParagraphLength())].map(generateWordLength);\n});\n\nexport const Word = ({ width }) => <div className=\"word\" style={{ width }} />;\n\nconst Paragraph = ({ words }) => (\n  <div className=\"paragraph\">\n    {words.map((width) => (\n      <Word width={width} />\n    ))}\n  </div>\n);\n\nexport const ContentPlaceholder = () => (\n  <motion.div\n    variants={{ collapsed: { scale: 0.8 }, open: { scale: 1 } }}\n    transition={{ duration: 0.8 }}\n    className=\"content-placeholder\"\n  >\n    {paragraphs.map((words) => (\n      <Paragraph words={words} />\n    ))}\n  </motion.div>\n);\n"]},"metadata":{},"sourceType":"module"}